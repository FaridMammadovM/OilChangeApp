// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Context;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241130082947_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Branchies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("InsertedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("UpdatedDate")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Branchies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Əhmədli filialı",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(200),
                            IsDeleted = false,
                            Name = "Əhmədli"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Yasamal filialı",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(219),
                            IsDeleted = false,
                            Name = "Yasamal"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Sumqayıt filialı",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(221),
                            IsDeleted = false,
                            Name = "Sumqayıt"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Bakıxanov filialı",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(289),
                            IsDeleted = false,
                            Name = "Bakıxanov"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Cars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("InsertedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("UpdatedDate")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2348),
                            IsDeleted = false,
                            Model = "X5"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2353),
                            IsDeleted = false,
                            Model = "M3"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2355),
                            IsDeleted = false,
                            Model = "M4"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2357),
                            IsDeleted = false,
                            Model = "M2"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2360),
                            IsDeleted = false,
                            Model = "3 Series"
                        },
                        new
                        {
                            Id = 6,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2362),
                            IsDeleted = false,
                            Model = "5 Series"
                        },
                        new
                        {
                            Id = 7,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2364),
                            IsDeleted = false,
                            Model = "7 Series"
                        },
                        new
                        {
                            Id = 8,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2366),
                            IsDeleted = false,
                            Model = "X3"
                        },
                        new
                        {
                            Id = 9,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2368),
                            IsDeleted = false,
                            Model = "X4"
                        },
                        new
                        {
                            Id = 10,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2370),
                            IsDeleted = false,
                            Model = "X6"
                        },
                        new
                        {
                            Id = 11,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2372),
                            IsDeleted = false,
                            Model = "X7"
                        },
                        new
                        {
                            Id = 12,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2374),
                            IsDeleted = false,
                            Model = "i3"
                        },
                        new
                        {
                            Id = 13,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2376),
                            IsDeleted = false,
                            Model = "i4"
                        },
                        new
                        {
                            Id = 14,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2378),
                            IsDeleted = false,
                            Model = "iX"
                        },
                        new
                        {
                            Id = 15,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2381),
                            IsDeleted = false,
                            Model = "Z4"
                        },
                        new
                        {
                            Id = 16,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2383),
                            IsDeleted = false,
                            Model = "530e"
                        },
                        new
                        {
                            Id = 17,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2385),
                            IsDeleted = false,
                            Model = "750i"
                        },
                        new
                        {
                            Id = 18,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2387),
                            IsDeleted = false,
                            Model = "M5"
                        },
                        new
                        {
                            Id = 19,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2389),
                            IsDeleted = false,
                            Model = "M8"
                        },
                        new
                        {
                            Id = 20,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2455),
                            IsDeleted = false,
                            Model = "i7"
                        },
                        new
                        {
                            Id = 21,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2457),
                            IsDeleted = false,
                            Model = "2 Series"
                        },
                        new
                        {
                            Id = 22,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2460),
                            IsDeleted = false,
                            Model = "1 Series"
                        },
                        new
                        {
                            Id = 23,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2462),
                            IsDeleted = false,
                            Model = "M6"
                        },
                        new
                        {
                            Id = 24,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2464),
                            IsDeleted = false,
                            Model = "320i"
                        },
                        new
                        {
                            Id = 25,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2466),
                            IsDeleted = false,
                            Model = "420i"
                        },
                        new
                        {
                            Id = 26,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2468),
                            IsDeleted = false,
                            Model = "520d"
                        },
                        new
                        {
                            Id = 27,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2470),
                            IsDeleted = false,
                            Model = "730d"
                        },
                        new
                        {
                            Id = 28,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2472),
                            IsDeleted = false,
                            Model = "740i"
                        },
                        new
                        {
                            Id = 29,
                            Brand = "BMW",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2474),
                            IsDeleted = false,
                            Model = "X1"
                        },
                        new
                        {
                            Id = 30,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2478),
                            IsDeleted = false,
                            Model = "C-Class"
                        },
                        new
                        {
                            Id = 31,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2480),
                            IsDeleted = false,
                            Model = "E-Class"
                        },
                        new
                        {
                            Id = 32,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2482),
                            IsDeleted = false,
                            Model = "S-Class"
                        },
                        new
                        {
                            Id = 33,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2484),
                            IsDeleted = false,
                            Model = "A-Class"
                        },
                        new
                        {
                            Id = 34,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2486),
                            IsDeleted = false,
                            Model = "CLA-Class"
                        },
                        new
                        {
                            Id = 35,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2488),
                            IsDeleted = false,
                            Model = "GLA-Class"
                        },
                        new
                        {
                            Id = 36,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2490),
                            IsDeleted = false,
                            Model = "GLC-Class"
                        },
                        new
                        {
                            Id = 37,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2492),
                            IsDeleted = false,
                            Model = "GLE-Class"
                        },
                        new
                        {
                            Id = 38,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2494),
                            IsDeleted = false,
                            Model = "GLS-Class"
                        },
                        new
                        {
                            Id = 39,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2496),
                            IsDeleted = false,
                            Model = "SLS AMG"
                        },
                        new
                        {
                            Id = 40,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2498),
                            IsDeleted = false,
                            Model = "AMG GT"
                        },
                        new
                        {
                            Id = 41,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2500),
                            IsDeleted = false,
                            Model = "G-Class"
                        },
                        new
                        {
                            Id = 42,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2502),
                            IsDeleted = false,
                            Model = "Maybach S-Class"
                        },
                        new
                        {
                            Id = 43,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2504),
                            IsDeleted = false,
                            Model = "EQC"
                        },
                        new
                        {
                            Id = 44,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2506),
                            IsDeleted = false,
                            Model = "EQS"
                        },
                        new
                        {
                            Id = 45,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2508),
                            IsDeleted = false,
                            Model = "Coupé"
                        },
                        new
                        {
                            Id = 46,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2510),
                            IsDeleted = false,
                            Model = "Roadster"
                        },
                        new
                        {
                            Id = 47,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2512),
                            IsDeleted = false,
                            Model = "B-Class"
                        },
                        new
                        {
                            Id = 48,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2514),
                            IsDeleted = false,
                            Model = "V-Class"
                        },
                        new
                        {
                            Id = 49,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2516),
                            IsDeleted = false,
                            Model = "GLB-Class"
                        },
                        new
                        {
                            Id = 50,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2518),
                            IsDeleted = false,
                            Model = "S-Class Coupe"
                        },
                        new
                        {
                            Id = 51,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2520),
                            IsDeleted = false,
                            Model = "SL-Class"
                        },
                        new
                        {
                            Id = 52,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2522),
                            IsDeleted = false,
                            Model = "M-Class"
                        },
                        new
                        {
                            Id = 53,
                            Brand = "Mercedes-Benz",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2524),
                            IsDeleted = false,
                            Model = "X-Class"
                        },
                        new
                        {
                            Id = 54,
                            Brand = "Audi",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2526),
                            IsDeleted = false,
                            Model = "A4"
                        },
                        new
                        {
                            Id = 55,
                            Brand = "Audi",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2528),
                            IsDeleted = false,
                            Model = "A6"
                        },
                        new
                        {
                            Id = 56,
                            Brand = "Audi",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2530),
                            IsDeleted = false,
                            Model = "Q7"
                        },
                        new
                        {
                            Id = 57,
                            Brand = "Audi",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2532),
                            IsDeleted = false,
                            Model = "Q5"
                        },
                        new
                        {
                            Id = 58,
                            Brand = "Audi",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2534),
                            IsDeleted = false,
                            Model = "A8"
                        },
                        new
                        {
                            Id = 59,
                            Brand = "Audi",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2537),
                            IsDeleted = false,
                            Model = "Q3"
                        },
                        new
                        {
                            Id = 60,
                            Brand = "Toyota",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2539),
                            IsDeleted = false,
                            Model = "Corolla"
                        },
                        new
                        {
                            Id = 61,
                            Brand = "Toyota",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2541),
                            IsDeleted = false,
                            Model = "Camry"
                        },
                        new
                        {
                            Id = 62,
                            Brand = "Toyota",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2543),
                            IsDeleted = false,
                            Model = "RAV4"
                        },
                        new
                        {
                            Id = 63,
                            Brand = "Toyota",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2545),
                            IsDeleted = false,
                            Model = "Land Cruiser"
                        },
                        new
                        {
                            Id = 64,
                            Brand = "Toyota",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2547),
                            IsDeleted = false,
                            Model = "Hilux"
                        },
                        new
                        {
                            Id = 65,
                            Brand = "Kia",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2550),
                            IsDeleted = false,
                            Model = "Sorento"
                        },
                        new
                        {
                            Id = 66,
                            Brand = "Kia",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2553),
                            IsDeleted = false,
                            Model = "Sportage"
                        },
                        new
                        {
                            Id = 67,
                            Brand = "Kia",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2555),
                            IsDeleted = false,
                            Model = "K5"
                        },
                        new
                        {
                            Id = 68,
                            Brand = "Kia",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2557),
                            IsDeleted = false,
                            Model = "Stinger"
                        },
                        new
                        {
                            Id = 69,
                            Brand = "Hyundai",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2559),
                            IsDeleted = false,
                            Model = "Sonata"
                        },
                        new
                        {
                            Id = 70,
                            Brand = "Hyundai",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2561),
                            IsDeleted = false,
                            Model = "Tucson"
                        },
                        new
                        {
                            Id = 71,
                            Brand = "Hyundai",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2563),
                            IsDeleted = false,
                            Model = "Elantra"
                        },
                        new
                        {
                            Id = 72,
                            Brand = "Hyundai",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2565),
                            IsDeleted = false,
                            Model = "Kona"
                        },
                        new
                        {
                            Id = 73,
                            Brand = "Hyundai",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2568),
                            IsDeleted = false,
                            Model = "Palisade"
                        },
                        new
                        {
                            Id = 74,
                            Brand = "Mitsubishi",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2570),
                            IsDeleted = false,
                            Model = "Outlander"
                        },
                        new
                        {
                            Id = 75,
                            Brand = "Mitsubishi",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2571),
                            IsDeleted = false,
                            Model = "Lancer"
                        },
                        new
                        {
                            Id = 76,
                            Brand = "Mitsubishi",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2573),
                            IsDeleted = false,
                            Model = "Eclipse"
                        },
                        new
                        {
                            Id = 77,
                            Brand = "Lada",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2575),
                            IsDeleted = false,
                            Model = "Granta"
                        },
                        new
                        {
                            Id = 78,
                            Brand = "Lada",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2577),
                            IsDeleted = false,
                            Model = "Vesta"
                        },
                        new
                        {
                            Id = 79,
                            Brand = "Lada",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2579),
                            IsDeleted = false,
                            Model = "XRay"
                        },
                        new
                        {
                            Id = 80,
                            Brand = "Volkswagen",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2581),
                            IsDeleted = false,
                            Model = "Golf"
                        },
                        new
                        {
                            Id = 81,
                            Brand = "Volkswagen",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2583),
                            IsDeleted = false,
                            Model = "Passat"
                        },
                        new
                        {
                            Id = 82,
                            Brand = "Volkswagen",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2585),
                            IsDeleted = false,
                            Model = "Tiguan"
                        },
                        new
                        {
                            Id = 83,
                            Brand = "Volkswagen",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2587),
                            IsDeleted = false,
                            Model = "Jetta"
                        },
                        new
                        {
                            Id = 84,
                            Brand = "Ford",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2733),
                            IsDeleted = false,
                            Model = "Mustang"
                        },
                        new
                        {
                            Id = 85,
                            Brand = "Ford",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2736),
                            IsDeleted = false,
                            Model = "F-150"
                        },
                        new
                        {
                            Id = 86,
                            Brand = "Land Rover",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2738),
                            IsDeleted = false,
                            Model = "Range Rover"
                        },
                        new
                        {
                            Id = 87,
                            Brand = "Land Rover",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2741),
                            IsDeleted = false,
                            Model = "Discovery"
                        },
                        new
                        {
                            Id = 88,
                            Brand = "Porsche",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2743),
                            IsDeleted = false,
                            Model = "911"
                        },
                        new
                        {
                            Id = 89,
                            Brand = "Porsche",
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(2745),
                            IsDeleted = false,
                            Model = "Cayenne"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Colors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InsertedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("UpdatedDate")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4623),
                            IsDeleted = false,
                            Name = "Ağ"
                        },
                        new
                        {
                            Id = 2,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4628),
                            IsDeleted = false,
                            Name = "Qara"
                        },
                        new
                        {
                            Id = 3,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4630),
                            IsDeleted = false,
                            Name = "Qırmızı"
                        },
                        new
                        {
                            Id = 4,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4631),
                            IsDeleted = false,
                            Name = "Yaşıl"
                        },
                        new
                        {
                            Id = 5,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4632),
                            IsDeleted = false,
                            Name = "Mavi"
                        },
                        new
                        {
                            Id = 6,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4634),
                            IsDeleted = false,
                            Name = "Sarı"
                        },
                        new
                        {
                            Id = 7,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4636),
                            IsDeleted = false,
                            Name = "Narıncı"
                        },
                        new
                        {
                            Id = 8,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4637),
                            IsDeleted = false,
                            Name = "Bənövşəyi"
                        },
                        new
                        {
                            Id = 9,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4638),
                            IsDeleted = false,
                            Name = "Çəhrayı"
                        },
                        new
                        {
                            Id = 10,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4639),
                            IsDeleted = false,
                            Name = "Boz"
                        },
                        new
                        {
                            Id = 11,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4640),
                            IsDeleted = false,
                            Name = "Qəhvəyi"
                        },
                        new
                        {
                            Id = 12,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4641),
                            IsDeleted = false,
                            Name = "Göy"
                        },
                        new
                        {
                            Id = 13,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4643),
                            IsDeleted = false,
                            Name = "Tünd yaşıl"
                        },
                        new
                        {
                            Id = 14,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4644),
                            IsDeleted = false,
                            Name = "Açıq yaşıl"
                        },
                        new
                        {
                            Id = 15,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4645),
                            IsDeleted = false,
                            Name = "Tünd mavi"
                        },
                        new
                        {
                            Id = 16,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4646),
                            IsDeleted = false,
                            Name = "Açıq mavi"
                        },
                        new
                        {
                            Id = 17,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4648),
                            IsDeleted = false,
                            Name = "Tünd qəhvəyi"
                        },
                        new
                        {
                            Id = 18,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4649),
                            IsDeleted = false,
                            Name = "Açıq qəhvəyi"
                        },
                        new
                        {
                            Id = 19,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4650),
                            IsDeleted = false,
                            Name = "Bürünc"
                        },
                        new
                        {
                            Id = 20,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4652),
                            IsDeleted = false,
                            Name = "Gümüşü"
                        },
                        new
                        {
                            Id = 21,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 791, DateTimeKind.Local).AddTicks(4654),
                            IsDeleted = false,
                            Name = "Qızılı"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Commits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CommitMessage")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("CustumerId")
                        .HasColumnType("int");

                    b.Property<int?>("InsertedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("UpdatedDate")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("CustumerId");

                    b.ToTable("Commits");
                });

            modelBuilder.Entity("Domain.Entities.Customers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InsertedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("UpdatedDate")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Domain.Entities.CustomersCarsMatrix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("CarNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ColorsId")
                        .HasColumnType("int");

                    b.Property<int>("CustumerId")
                        .HasColumnType("int");

                    b.Property<int?>("FuelTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("InsertedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Motor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("UpdatedDate")
                        .HasColumnType("time");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("ColorsId");

                    b.HasIndex("CustumerId");

                    b.HasIndex("FuelTypeId");

                    b.ToTable("CustomersCarsMatrix");
                });

            modelBuilder.Entity("Domain.Entities.Employees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InsertedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("UpdatedDate")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Domain.Entities.Filters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InsertedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("UpdatedDate")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Filters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 792, DateTimeKind.Local).AddTicks(8017),
                            IsDeleted = false,
                            Name = "Yağ"
                        },
                        new
                        {
                            Id = 2,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 792, DateTimeKind.Local).AddTicks(8025),
                            IsDeleted = false,
                            Name = "Hava"
                        },
                        new
                        {
                            Id = 3,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 792, DateTimeKind.Local).AddTicks(8026),
                            IsDeleted = false,
                            Name = "Yanacaq"
                        },
                        new
                        {
                            Id = 4,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 792, DateTimeKind.Local).AddTicks(8027),
                            IsDeleted = false,
                            Name = "Salon"
                        });
                });

            modelBuilder.Entity("Domain.Entities.FuelTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InsertedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("UpdatedDate")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("FuelTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 792, DateTimeKind.Local).AddTicks(9797),
                            IsDeleted = false,
                            Name = "Benzin"
                        },
                        new
                        {
                            Id = 2,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 792, DateTimeKind.Local).AddTicks(9802),
                            IsDeleted = false,
                            Name = "Qaz"
                        },
                        new
                        {
                            Id = 3,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 792, DateTimeKind.Local).AddTicks(9804),
                            IsDeleted = false,
                            Name = "Dizel"
                        },
                        new
                        {
                            Id = 4,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 792, DateTimeKind.Local).AddTicks(9805),
                            IsDeleted = false,
                            Name = "Elektro"
                        },
                        new
                        {
                            Id = 5,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 792, DateTimeKind.Local).AddTicks(9807),
                            IsDeleted = false,
                            Name = "Hybrid"
                        },
                        new
                        {
                            Id = 6,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 792, DateTimeKind.Local).AddTicks(9808),
                            IsDeleted = false,
                            Name = "Plug-in Hybrid"
                        },
                        new
                        {
                            Id = 7,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 792, DateTimeKind.Local).AddTicks(9809),
                            IsDeleted = false,
                            Name = "Hidrogen"
                        });
                });

            modelBuilder.Entity("Domain.Entities.OilChangeFiltersMatrix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FiltersId")
                        .HasColumnType("int");

                    b.Property<int?>("InsertedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OilChangesId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("UpdatedDate")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("FiltersId");

                    b.HasIndex("OilChangesId");

                    b.ToTable("OilChangeFiltersMatrix");
                });

            modelBuilder.Entity("Domain.Entities.OilChanges", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustumerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("InsertedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KilometersTravelled")
                        .HasColumnType("int");

                    b.Property<decimal>("LitersUsed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OilTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("UpdatedDate")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CarId");

                    b.HasIndex("CustumerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("OilTypeId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ServiceId");

                    b.ToTable("OilChanges");
                });

            modelBuilder.Entity("Domain.Entities.OilTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InsertedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("UpdatedDate")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("OilTypes");
                });

            modelBuilder.Entity("Domain.Entities.Phones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("BranchiesId")
                        .HasColumnType("int");

                    b.Property<int?>("InsertedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("UpdatedDate")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("BranchiesId");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("Domain.Entities.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InsertedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("UpdatedDate")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InsertedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("UpdatedDate")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 802, DateTimeKind.Local).AddTicks(1323),
                            IsDeleted = false,
                            RoleName = "Costumer"
                        },
                        new
                        {
                            Id = 2,
                            InsertedDate = new DateTime(2024, 11, 30, 12, 29, 46, 802, DateTimeKind.Local).AddTicks(1329),
                            IsDeleted = false,
                            RoleName = "Branch"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Services", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InsertedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("UpdatedDate")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Domain.Entities.Commits", b =>
                {
                    b.HasOne("Domain.Entities.Customers", "Customers")
                        .WithMany("Commits")
                        .HasForeignKey("CustumerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("Domain.Entities.Customers", b =>
                {
                    b.HasOne("Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Domain.Entities.CustomersCarsMatrix", b =>
                {
                    b.HasOne("Domain.Entities.Cars", "Cars")
                        .WithMany("UsersCars")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Colors", "Colors")
                        .WithMany("UsersCars")
                        .HasForeignKey("ColorsId");

                    b.HasOne("Domain.Entities.Customers", "Customers")
                        .WithMany("CustomersCars")
                        .HasForeignKey("CustumerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.FuelTypes", "FuelType")
                        .WithMany("UsersCars")
                        .HasForeignKey("FuelTypeId");

                    b.Navigation("Cars");

                    b.Navigation("Colors");

                    b.Navigation("Customers");

                    b.Navigation("FuelType");
                });

            modelBuilder.Entity("Domain.Entities.OilChangeFiltersMatrix", b =>
                {
                    b.HasOne("Domain.Entities.Filters", "Filter")
                        .WithMany("OilChangeFilters")
                        .HasForeignKey("FiltersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.OilChanges", "OilChanges")
                        .WithMany("OilChangeFilters")
                        .HasForeignKey("OilChangesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filter");

                    b.Navigation("OilChanges");
                });

            modelBuilder.Entity("Domain.Entities.OilChanges", b =>
                {
                    b.HasOne("Domain.Entities.Branchies", "Branchies")
                        .WithMany("OilChanges")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Cars", "Cars")
                        .WithMany("OilChanges")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Customers", "Customers")
                        .WithMany("OilChanges")
                        .HasForeignKey("CustumerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Employees", "Employees")
                        .WithMany("OilChanges")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.OilTypes", "OilTypes")
                        .WithMany("OilChanges")
                        .HasForeignKey("OilTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Products", "Products")
                        .WithMany("OilChanges")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Services", "Services")
                        .WithMany("OilChanges")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branchies");

                    b.Navigation("Cars");

                    b.Navigation("Customers");

                    b.Navigation("Employees");

                    b.Navigation("OilTypes");

                    b.Navigation("Products");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("Domain.Entities.Phones", b =>
                {
                    b.HasOne("Domain.Entities.Branchies", "Branchies")
                        .WithMany("Phones")
                        .HasForeignKey("BranchiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branchies");
                });

            modelBuilder.Entity("Domain.Entities.Branchies", b =>
                {
                    b.Navigation("OilChanges");

                    b.Navigation("Phones");
                });

            modelBuilder.Entity("Domain.Entities.Cars", b =>
                {
                    b.Navigation("OilChanges");

                    b.Navigation("UsersCars");
                });

            modelBuilder.Entity("Domain.Entities.Colors", b =>
                {
                    b.Navigation("UsersCars");
                });

            modelBuilder.Entity("Domain.Entities.Customers", b =>
                {
                    b.Navigation("Commits");

                    b.Navigation("CustomersCars");

                    b.Navigation("OilChanges");
                });

            modelBuilder.Entity("Domain.Entities.Employees", b =>
                {
                    b.Navigation("OilChanges");
                });

            modelBuilder.Entity("Domain.Entities.Filters", b =>
                {
                    b.Navigation("OilChangeFilters");
                });

            modelBuilder.Entity("Domain.Entities.FuelTypes", b =>
                {
                    b.Navigation("UsersCars");
                });

            modelBuilder.Entity("Domain.Entities.OilChanges", b =>
                {
                    b.Navigation("OilChangeFilters");
                });

            modelBuilder.Entity("Domain.Entities.OilTypes", b =>
                {
                    b.Navigation("OilChanges");
                });

            modelBuilder.Entity("Domain.Entities.Products", b =>
                {
                    b.Navigation("OilChanges");
                });

            modelBuilder.Entity("Domain.Entities.Services", b =>
                {
                    b.Navigation("OilChanges");
                });
#pragma warning restore 612, 618
        }
    }
}
